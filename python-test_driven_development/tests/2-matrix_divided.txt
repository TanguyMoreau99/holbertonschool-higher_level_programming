The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing matrix elements by 3
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing matrix elements by 2
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Dividing matrix elements by 0.5
    >>> matrix_divided(matrix, 0.5)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

Division by zero
    >>> try:
    ...     matrix_divided(matrix, 0)
    ... except Exception as e:
    ...     print(e)
    division by zero

Invalid divisor (string)
    >>> try:
    ...     matrix_divided(matrix, "a")
    ... except Exception as e:
    ...     print(e)
    div must be a number

Non-matrix input (string)
    >>> try:
    ...     matrix_divided("not a matrix", 2)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Non-matrix input (list of integers)
    >>> try:
    ...     matrix_divided([1, 2, 3], 2)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Inconsistent row sizes
    >>> try:
    ...     matrix_divided([[1, 2], [3, 4, 5]], 2)
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size

Invalid element (string in matrix)
    >>> try:
    ...     matrix_divided([[1, 2], ["3", 4]], 2)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Dividing by infinity
    >>> try:
    ...     matrix_divided(matrix, float('inf'))
    ... except Exception as e:
    ...     print(e)
    div must be a number

Dividing by NaN
    >>> try:
    ...     matrix_divided(matrix, float('nan'))
    ... except Exception as e:
    ...     print(e)
    div must be a number

Matrix containing infinity
    >>> try:
    ...     matrix_divided([[1, 2], [float('inf'), 4]], 2)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

Matrix containing NaN
    >>> try:
    ...     matrix_divided([[1, 2], [float('nan'), 4]], 2)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats